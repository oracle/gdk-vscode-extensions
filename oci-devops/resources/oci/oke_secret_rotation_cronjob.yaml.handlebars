#####################################################################
# Copyright (c) 2021, 2023, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
#####################################################################

apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{{cron_job_name}}}
spec:
  schedule: "{{{cron_start_minute}}} * * * *"
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        spec:
          hostNetwork: true
          containers:
          - name: create-secret
            image: ghcr.io/oracle/oci-cli:latest
            env:
            - name: OCI_CLI_AUTH
              value: instance_principal
            command:
            - /bin/bash
            - -c
            - |
              # Define kubectl version
              KUBECTL_VERSION="v1.27.4"

              # Get architecture
              case "\$(uname -m)" in
                x86_64) ARCHITECTURE="amd64" ;;
                aarch64) ARCHITECTURE="arm64" ;;
                *) ARCHITECTURE="Unknown architecture" ;;
              esac

              # Define kubectl dowload url
              KUBECTL_URL="https://dl.k8s.io/release/\${KUBECTL_VERSION}/bin/linux/\${ARCHITECTURE}/kubectl"

              # Create a directory in /tmp for kubectl
              mkdir -p /tmp/bin

              # Download kubectl
              curl -LO "\${KUBECTL_URL}"

              # Make it executable
              chmod +x ./kubectl

              mv ./kubectl /tmp/bin/kubectl
              export PATH=\$PATH:/tmp/bin

              # Generate token
              TOKEN=\$(oci raw-request --http-method GET --target-uri https://{{{repo_endpoint}}}/20180419/docker/token | jq -r '.data.token')

              # Create new secret
              kubectl create secret --save-config --dry-run=client docker-registry {{{secret_name}}} --docker-server={{{repo_endpoint}}} --docker-username=BEARER_TOKEN --docker-password="\$TOKEN" -o yaml | kubectl apply -f -
          restartPolicy: Never
          serviceAccountName: {{{service_account_name}}}
